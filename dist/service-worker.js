if(!self.define){let e,i={};const c=(c,n)=>(c=new URL(c+".js",n).href,i[c]||new Promise((i=>{if("document"in self){const e=document.createElement("script");e.src=c,e.onload=i,document.head.appendChild(e)}else e=c,importScripts(c),i()})).then((()=>{let e=i[c];if(!e)throw new Error(`Module ${c} didnâ€™t register its module`);return e})));self.define=(n,o)=>{const s=e||("document"in self?document.currentScript.src:"")||location.href;if(i[s])return;let r={};const f=e=>c(e,s),a={module:{uri:s},exports:r,require:f};i[s]=Promise.all(n.map((e=>a[e]||f(e)))).then((e=>(o(...e),r)))}}define(["./workbox-94fc829e"],(function(e){"use strict";self.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"bundle.js",revision:"439e46b562871a478aa9238c3da93262"},{url:"favicon.png",revision:"7f3b99e9b1bd024ea405c593bfa0c0e1"},{url:"icons/icon-128x128.png",revision:"70412965ae49728fecf3c01c9f0c3309"},{url:"icons/icon-144x144.png",revision:"d90f65369ba808e6c83f821e2b7c7564"},{url:"icons/icon-152x152.png",revision:"04745a2422ab153d3573031fef40cbce"},{url:"icons/icon-192x192.png",revision:"20ff00dcfac6e5c8bb40507bb358b70d"},{url:"icons/icon-384x384.png",revision:"001c7f987174c6de5945d53cf9b9b68b"},{url:"icons/icon-512x512.png",revision:"bf9fc25f7396eda65c8e8c4d3fbccfae"},{url:"icons/icon-72x72.png",revision:"8dcc6f2f84b96961c91d66246cd4bf33"},{url:"icons/icon-96x96.png",revision:"e6d76957c9c2b3b29b5e8460eaed2eb5"},{url:"images/heros/hero-image_1.jpg",revision:"a2f444d9e2e43a5d0373b1a0d8cb2236"},{url:"images/heros/hero-image_2.jpg",revision:"49f78cae81de4f48caf1c2fe0271c828"},{url:"images/heros/hero-image_3.jpg",revision:"d232e05589056e05f52cf2689f315c6c"},{url:"images/heros/hero-image_4.jpg",revision:"4ea98fe648a0b853ab379c928b5fd0bf"},{url:"index.html",revision:"e06f9421fd79122422d55b6312a64ef1"},{url:"logo-white.png",revision:"20d8d9b362a3298d9b7e9c10c47e4388"},{url:"manifest.json",revision:"5cec9777681ed2590450b129985f9c33"}],{ignoreURLParametersMatching:[/.*/]}),e.registerRoute(/https:\/\/restaurant-api.dicoding.dev\//,new e.StaleWhileRevalidate({cacheName:"dicoding_api",plugins:[]}),"GET"),e.registerRoute(/https:\/\/kit.fontawesome.com\//,new e.StaleWhileRevalidate({cacheName:"fontawesome",plugins:[]}),"GET"),e.registerRoute(/https:\/\/fonts.googleapis.com\//,new e.StaleWhileRevalidate({cacheName:"google-fonts",plugins:[]}),"GET")}));
